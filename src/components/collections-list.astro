---
import MarkdownIt from 'markdown-it';
import { Image } from 'astro:assets';
import AstroImage from '../components/astro-image.astro';
import { formatDate } from '../utils/format-date';

const parser = new MarkdownIt();

const { collections, base, slice } = Astro.props;
---

<ul class='list-none my-8 p-0 flex flex-col gap-8'>
  {
    collections
      .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
      .slice(0, slice || collections.length)
      .map((collection) => {
        const {
          slug,
          data: { featuredImage, logo, publication, title, date },
        } = collection;

        const excerpt = parser
          .render(collection.body)
          .split('\n')
          .slice(0, 4)
          .map((str) => {
            return str.replace(/<\/?[^>]+(>|$)/g, '').split('\n');
          })
          .flat()
          .join(' ');

        return (
          <li class='m-0 p-0 rounded border border-brand-outline bg-brand-surface transition-all shadow-lg hover:shadow-brand-secondary/10 hover:-translate-y-2 ease-in-out duration-500'>
            <a
              href={`${base}/${slug}/`}
              class='flex flex-col sm:flex-row gap-3 md:gap-6 items-center bg-brand-surface border border-brand-outline rounded p-4 no-underline'
            >
              {featuredImage ? (
                <AstroImage
                  width={570}
                  height={321}
                  alt={title}
                  url={featuredImage}
                  className='!my-0 w-full sm:w-1/2'
                />
              ) : null}
              <div class='flex flex-col gap-2'>
                <span class='flex gap-2 items-center'>
                  {publication ? (
                    <>
                      <div class='flex items-center gap-2'>
                        <Image width={24} height={24} alt={publication} src={logo} class='m-0' />
                        <small class='text-xs text-brand-secondary'>{publication}</small>
                      </div>
                      <span>&bull;</span>
                    </>
                  ) : null}

                  <time class='text-xs font-bold text-brand-primary'>{formatDate(date)}</time>
                </span>
                <strong class='block text-brand-text text-xl'>{title}</strong>
                <p class='font-light'>{`${excerpt.substring(0, 100)}...`}</p>
              </div>
            </a>
          </li>
        );
      })
  }
</ul>
