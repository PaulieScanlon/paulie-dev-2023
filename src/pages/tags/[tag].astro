---
export const prerender = true;

import { getCollection } from 'astro:content';
import { formatSlug } from '../../utils/format-slug';

import Main from '../../layouts/main.astro';
import Aside from '../../components/aside.astro';
import ProfileCard from '../../components/profile-card.astro';
import CollectionsList from '../../components/collections-list.astro';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  const demos = await getCollection('demos');
  const opensource = await getCollection('opensource');
  const posts = await getCollection('posts');
  const streams = await getCollection('streams');

  const collections = [...articles, ...demos, ...opensource, ...posts, ...streams];

  return collections
    .map((collection) => {
      const {
        data: { tags },
      } = collection;

      return tags
        .map((tag) => {
          return {
            params: {
              tag: formatSlug(tag),
            },
            props: { name: tag, collections: collections },
          };
        })
        .flat();
    })
    .flat();
}

const { tag } = Astro.params;
const site = Astro.site.href;

const { name, collections } = Astro.props;

const filteredCollection = collections.filter((collection) => {
  const sanitizedTags = collection.data.tags.map((tag) => formatSlug(tag));
  return sanitizedTags.includes(formatSlug(tag));
});

const ogImage = `${site}/tags/${tag}/og.png`;
---

<Main title={name} slug={`/tags/${tag}/`} image={ogImage}>
  <strong class='flex items-center justify-between gap-2 text-sm text-brand-primary'
    >{name}
    <span class='text-inherit text-xs border border-brand-outline bg-surface px-2 py-1'
      >{`x${filteredCollection.length}`}</span
    >
  </strong>
  <h1 class='mb-0'>{`Tagged with ${name}`}</h1>
  <p>
    Here you'll find <strong class='text-brand-primary'>{filteredCollection.length}</strong>
    <span>{filteredCollection.length > 1 ? 'pieces' : 'piece'}</span> of content I've written about
    <strong class='text-brand-yellow'>{name}</strong>. <span>{filteredCollection.length > 1 ? "They've" : "It's"}</span>
    either been published here on my site, or by <span
      >{filteredCollection.length > 1 ? 'external publications' : 'an external publication'}</span
    >.
  </p>
  <CollectionsList collections={filteredCollection} highlighted={tag} />
  <Aside>
    <ProfileCard />
  </Aside>
</Main>
