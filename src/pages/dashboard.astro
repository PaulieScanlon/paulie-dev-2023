---
import { sql } from '../neon';

import Main from '../layouts/main.astro';

import Aside from '../components/aside.astro';
import ProfileCard from '../components/profile-card.astro';
import LineChartYears from '../components/line-chart-years.astro';
import BarChartDays from '../components/bar-chart-days.astro';
import ListExternalPublishers from '../components/list-external-publishers.astro';
import ListPopularPosts from '../components/list-popular-posts.astro';
import ListTopTenCities from '../components/list-top-ten-cities.astro';
import GlobeAllCities from '../components/globe-all-cities';
import LineChartVisits from '../components/line-chart-visits.astro';
import RadarChartReactions from '../components/radar-chart-reactions.astro';
import DonutChartTags from '../components/donut-chart-tags.astro';
import PoweredByNeon from '../components/powered-by-neon.astro';

import groupByTable from '../utils/group-by-table';
import groupByYear from '../utils/group-by-year';
import groupByDay from '../utils/group-by-day';
import groupByDate from '../utils/group-by-date';
import groupByCity from '../utils/group-by-city';
import groupByPublication from '../utils/group-by-publication';
import groupByTag from '../utils/group-by-tag';
import groupBySlug from '../utils/group-by-slug';
import groupByReaction from '../utils/group-by-reaction';

import { getCollection } from 'astro:content';

const articles = await getCollection('articles');
const demos = await getCollection('demos');
const opensource = await getCollection('opensource');
const posts = await getCollection('posts');
const streams = await getCollection('streams');

const collections = [...articles, ...demos, ...opensource, ...posts, ...streams];

let table = null;

try {
  const response = await sql`
  SELECT * FROM 
    (SELECT 'analytics' AS table, analytics.* 
    FROM analytics
    WHERE date >= NOW() - INTERVAL '30 days') analytics
  NATURAL FULL JOIN 
    (SELECT 'reactions' AS table, reactions.*
    FROM reactions
    WHERE reaction <> 'wondering' AND reaction <> 'confused') reactions`;

  if (!response.length) {
    throw new Error('Bad request');
  }

  table = groupByTable(response);
} catch (error) {
  console.error(error);
}
---

<Main title='Dashboard' description='Statistics and analytics about my work' slug='/dashboard/'>
  <strong class='text-xs text-brand-primary'>Dashboard</strong>
  <h1 class='mb-0'>Built-in Analytics</h1>
  <p class='mb-16'>
    The data visualizations on this page have been created using data from local MDX files and a custom web analytics
    solution powered by Vercel Edge Functions and a Neon Serverless Postgres database.
  </p>
  {
    table ? (
      <div class='flex flex-col gap-24 min-w-full'>
        <section>
          <h2 class='m-0 uppercase'>Year and Month</h2>
          <p class='mt-0 mb-4 text-slate-300'>Total published content.</p>
          <LineChartYears data={groupByYear(collections)} />
        </section>

        <section>
          <h2 class='m-0 uppercase'>Year and Day</h2>
          <p class='mt-0 mb-4 text-slate-300'>Total published content.</p>
          <BarChartDays data={groupByDay(collections)} />
        </section>

        <div class='grid gap-24 sm:gap-8 sm:grid-cols-2'>
          <section>
            <h2 class='m-0 uppercase'>Total by reaction</h2>
            <p class='mt-0 mb-4 text-slate-300'>All reactions.</p>
            <RadarChartReactions data={groupByReaction(table.reactions)} />
            <PoweredByNeon period={groupByReaction(table.reactions).length} />
          </section>
          <section>
            <h2 class='m-0 uppercase'>Total by Tag</h2>
            <p class='mt-0 mb-4 text-slate-300'>Top five tags.</p>
            <DonutChartTags data={groupByTag(collections)} />
          </section>
        </div>

        <section>
          <h2 class='m-0 uppercase'>Total by publisher</h2>
          <p class='mt-0 mb-4 text-slate-300'>All external publishers.</p>
          <ListExternalPublishers data={groupByPublication(articles)} />
        </section>

        <section>
          <h2 class='m-0 uppercase'>Total visits</h2>
          <p class='mt-0 mb-4 text-slate-300'>All page views.</p>
          <LineChartVisits data={groupByDate(table.analytics)} />
          <PoweredByNeon period={groupByDate(table.analytics).length} />
        </section>

        <div class='flex flex-col md:flex-row gap-24 md:gap-8 overflow-hidden'>
          <section class='w-full lg:w-1/2'>
            <div class='flex flex-col'>
              <h2 class='m-0 uppercase'>Total by City</h2>
              <p class='mt-0 mb-4 text-slate-300'>Top ten city visits.</p>
              <ListTopTenCities data={groupByCity(table.analytics)} />
            </div>
            <PoweredByNeon period={groupByDate(table.analytics).length} />
          </section>
          <section class='w-full lg:w-1/2'>
            <h2 class='m-0 uppercase'>Geolocation</h2>
            <p class='mt-0 mb-4 text-slate-300'>All city visits.</p>
            <div class='relative rounded border border-brand-outline bg-brand-surface/40 cursor-move'>
              <div class='flex justify-center overflow-hidden'>
                <GlobeAllCities client:only data={groupByCity(table.analytics)} />
              </div>
            </div>
            <PoweredByNeon period={groupByDate(table.analytics).length} />
          </section>
        </div>

        <section>
          <h2 class='m-0 uppercase'>Popular Posts</h2>
          <p class='mt-0 mb-4 text-slate-300'>Top ten post views.</p>
          <ListPopularPosts data={groupBySlug(table.analytics)} />
          <PoweredByNeon period={groupByDate(table.analytics).length} />
        </section>
      </div>
    ) : null
  }
  <Aside>
    <ProfileCard />
  </Aside>
</Main>
