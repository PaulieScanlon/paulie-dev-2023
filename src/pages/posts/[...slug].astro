---
export const prerender = true;

import { getCollection } from 'astro:content';

import Main from '../../layouts/main.astro';
import Aside from '../../components/aside.astro';
import TagsList from '../../components/tags-list.astro';
import FeaturedImageCard from '../../components/featured-image-card.astro';
import TableOfContents from '../../components/table-of-contents.astro';
import Reactions from '../../components/reactions.tsx';

import { formatDate } from '../../utils/format-date';
import { createExcerpt } from '../../utils/create-excerpt';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  return posts.map((post) => {
    return {
      params: {
        slug: post.slug,
      },
      props: {
        post,
      },
    };
  });
}

const {
  post,
  post: {
    slug,
    data: { title, date, tags, featuredImage },
  },
} = Astro.props;

const excerpt = `${createExcerpt(post.body).substring(0, 70)}...`;

const { Content, headings } = await post.render();

const target = `https://www.paulie.dev/posts/${slug}/`;
let webmentions = null;

try {
  const response = await fetch(`https://webmention.io/api/mentions.jf2?target=${target}`);

  if (!response.ok) {
    throw new Error();
  }

  if (response.status !== 200) {
    throw new Error('Bad request');
  }

  const data = await response.json();
  webmentions = data;
} catch (error) {
  console.error(error);
}
---

<Main title={title} description={excerpt} slug={`/posts/${slug}/`} image={featuredImage}>
  <time class='text-xs font-bold text-brand-primary'>{formatDate(date)}</time>
  <h1>{title}</h1>
  <TagsList tags={tags} />
  <Content />
  <Reactions client:only='react' slug={`/posts/${slug}/`} />
  <Aside>
    <FeaturedImageCard alt={title} thumbnail={featuredImage} text={`${title}\n https://paulie.dev/posts/${slug}/`} />
    <TableOfContents headings={headings} />
    {
      webmentions.children.length > 0 ? (
        <div class='flex flex-col gap-4 border border-brand-outline rounded p-8'>
          <h6 class='m-0 font-semibold uppercase text-center text-brand-secondary'>Webmentions</h6>
          <div class='flex justify-center'>
            {
              <ul class='flex flex-wrap justify-center list-none m-0 p-0'>
                {webmentions.children
                  .filter((link) => link.author)
                  .map((link) => {
                    const {
                      url,
                      author: { name, photo },
                    } = link;

                    return (
                      <li class='m-0 -ml-2 p-0 w-6 h-6'>
                        <a href={url} target='_blank' rel='noreferrer' title={name}>
                          <img
                            alt={name}
                            src={photo}
                            class='block w-6 h-6 m-0 rounded-full overflow-hidden ring-2 ring-brand-muted'
                          />
                        </a>
                      </li>
                    );
                  })}
              </ul>
            }
          </div>
        </div>
      ) : null
    }
  </Aside>
</Main>
